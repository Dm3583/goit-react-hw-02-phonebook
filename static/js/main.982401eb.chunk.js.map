{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ListItem/ListItem.js","components/ContactsList/ContactsList.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","props","inputFieldHandler","target","value","setState","submitHandler","evt","preventDefault","state","newContact","id","uuid","addContact","reset","this","onSubmit","type","onChange","Component","Filter","filterInput","ListItem","contact","deleteContact","onClick","ContactsList","contactsList","map","App","contacts","find","alert","contactId","filter","el","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.982401eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE,\n    };\n  }\n\n  inputFieldHandler = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = (evt) => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n    const newContact = { id: uuid(), name, number };\n\n    this.props.addContact(newContact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.submitHandler}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.inputFieldHandler}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.inputFieldHandler}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, filterInput }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" name=\"filter\" value={value} onChange={filterInput} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  filterInput: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ListItem = ({ contact, deleteContact }) => {\n  const { id, name, number } = contact;\n  return (\n    <li>\n      {name}: {number}\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes, { shape } from \"prop-types\";\nimport ListItem from \"./ListItem\";\n\nconst ContactsList = ({ contactsList, deleteContact }) => (\n  <ul>\n    {contactsList.map((contact) => (\n      <ListItem\n        key={contact.id}\n        contact={contact}\n        deleteContact={deleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactsList from \"./ContactsList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      contacts: [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ],\n      filter: \"\",\n    };\n  }\n\n  inputFieldHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addContact = (contact) => {\n    const namesList = this.state.contacts.map((contact) => contact.name);\n\n    if (!namesList.find((name) => name === contact.name)) {\n      this.setState(({ contacts }) => {\n        return { contacts: [...contacts, contact] };\n      });\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((el) => el.id !== contactId),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm addContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} filterInput={this.inputFieldHandler} />\n        <ContactsList\n          contactsList={visibleContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}