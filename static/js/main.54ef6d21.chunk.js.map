{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsList/ListItem/ListItem.js","components/ContactsList/ContactsList.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","props","inputFieldHandler","target","value","setState","submitHandler","evt","preventDefault","state","newContact","id","uuid","addContact","reset","this","className","onSubmit","type","onChange","Component","Filter","filterInput","ListItem","contact","deleteContact","onClick","ContactsList","contactsList","map","App","contacts","find","alert","contactId","filter","el","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54ef6d21.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactForm.scss\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE,\n    };\n  }\n\n  inputFieldHandler = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = (evt) => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (!name || !number) {\n      return;\n    }\n\n    const newContact = { id: uuid(), name, number };\n\n    this.props.addContact(newContact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"ContactForm\" onSubmit={this.submitHandler}>\n        <label>\n          <p className=\"ContactForm__label\">Name</p>\n          <input\n            className=\"ContactForm__text-input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.inputFieldHandler}\n          />\n        </label>\n        <label>\n          <p className=\"ContactForm__label\">Number</p>\n          <input\n            className=\"ContactForm__text-input\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.inputFieldHandler}\n          />\n        </label>\n        <button className=\"ContactForm__button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Filter.scss\";\n\nconst Filter = ({ value, filterInput }) => (\n  <label>\n    <p>Find contacts by name</p>\n    <input\n      className=\"Filter__input\"\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={filterInput}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  filterInput: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ListItem.scss\";\n\nconst ListItem = ({ contact, deleteContact }) => {\n  const { id, name, number } = contact;\n  return (\n    <li className=\"ListItem\">\n      {name}: {number}\n      <button\n        className=\"ListItem__button\"\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes, { shape } from \"prop-types\";\nimport ListItem from \"./ListItem\";\nimport \"./ContactsList.scss\";\n\nconst ContactsList = ({ contactsList, deleteContact }) => (\n  <ul className=\"ContactsList\">\n    {contactsList.map((contact) => (\n      <ListItem\n        key={contact.id}\n        contact={contact}\n        deleteContact={deleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport ContactsList from \"./ContactsList\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      contacts: [\r\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      ],\r\n      filter: \"\",\r\n    };\r\n  }\r\n\r\n  inputFieldHandler = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  addContact = (contact) => {\r\n    const namesList = this.state.contacts.map((contact) => contact.name);\r\n\r\n    if (!namesList.find((name) => name === contact.name)) {\r\n      this.setState(({ contacts }) => {\r\n        return { contacts: [...contacts, contact] };\r\n      });\r\n    } else {\r\n      alert(`${contact.name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((el) => el.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm addContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} filterInput={this.inputFieldHandler} />\r\n        <ContactsList\r\n          contactsList={visibleContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}